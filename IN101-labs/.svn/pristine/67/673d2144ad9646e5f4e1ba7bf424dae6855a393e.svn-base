#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>


#include "sokoban.h"
#include "loader.h"


int main(void) {


//define input and comparison file sizes
	
	char input_map;
	
	
	FILE* in_map = NULL;
	FILE* result_map = NULL;
	
	
	char *outputs[5] = {"./data/soko_dumb_1.in","./data/soko_dumb_2.in","./data/soko_dumb_win.in","./data/soko_dumb_3.in","./data/soko_dumb_win.in"};
	int plan_lenght[5] ={3,5,7,7,9};
	char *plan1="SSSEENN";
	char *plan2="ESEESSWNN";
	char *plan;
	
	//open each map
	input_map = "./data/soko_dumb.in";
	//in_map = fopen(input_map,"r");
	
	 //iterate over plans
	 for(int j=0; j<1; j++){
		 game_map* map_struct = load(in_map);
		 //print_map(map_struct);
		 
		 //~ //selecting plan
		//~ if (j<=3){
				//~ plan=plan1;
		//~ }
		//~ else{
				//~ plan=plan2;
		//~ }
		 
		 //~ //Making a moves in the original map
		//~ for (int k=0; k <= plan_lenght[j]; j++){
			//~ game_map *map_struct1=move(map_struct,plan[k]);
			//~ map_struct=map_struct1;
		//~ }
		//~ game_map* newmap_struct=map_struct;
		 
		//~ //open and print result file
		 
		//~ result_map = fopen(outputs[j],"r");
		//~ game_map* resultmap_struct = load(result_map);
		 
		 //~ //comparing using assert function
		   //~ for (int w=0; w < (*newmap_struct).width; w++){
			 //~ for (int h=0; h < (*newmap_struct).height; h++){
				 //~ assert((*resultmap_struct).map_array[w + (*newmap_struct).width *h] == ((*newmap_struct).map_array)[w + (*newmap_struct).width*h]);
			 //~ }
		 //~ }
		 
		 
		 
	 }
	return EXIT_SUCCESS;
}
